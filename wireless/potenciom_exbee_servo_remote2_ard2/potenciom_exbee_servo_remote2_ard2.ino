// управление потенциометром с одного ардуино сервой на другом. в качестве связи xbee
// скетч для второго ардуино, который управляет приводом
// xbee общается по сериал только пл воздуху

// подключаем библ серво
#include <Servo.h>

int servoPin = 9;

// создаем серво объект
Servo myServo;

void setup() {
  Serial.begin(9600);  // инициализация сериал соединения
  myServo.attach(servoPin);  // аттачим нашу серву к пину
  
}

void loop() {

  while(Serial.available() == 0);   // ждем пока к нам не придет сериал значение и сравниваем его с нулем
  // он будет бесконечно ждать пока по сериал что-то не появится от другой xbee
  int data = Serial.read() - '0';   //  преобразует входящий байт в целое число. из byte в int
  int pos = map(dist, 0, 9, 0, 180);  // отображаем получ знач на угол поворота сервы
  pos = constrain(pos, 0, 180);  // ограничиваем диапазон на случай битых значений(на всякий случай)

  myServo.write(pos);   // крутим сервой
  Serial.flush();  // cчитываем только один пришедший символ а остальное сливаем, иначе серва сойдет с ума
  

  int val = map(analogRead(potPin), 0, 1023, 0, 9);   // отображ значения с аналогового входа на значения от 0 до 9
// это значит что передаем 1 байт данных и не бедет трудностей на втором конце с обработкой. Получается, что
// мы передаем 9 разных значений для привода
  Serial.println(val);
  delay(50);  

}
